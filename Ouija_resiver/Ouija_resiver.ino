#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>

RF24 radio(9, 8);  // CE, CSN
const byte serverAddress[6] = "Server";
const byte clientAddress[6] = "Client";

byte number = 0;

void setup() {
    Serial.begin(115200); Serial.println("üì° –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω...");
    radio.begin();
    radio.setPALevel(RF24_PA_HIGH);
    radio.setDataRate(RF24_250KBPS);
    radio.setRetries(5, 15);
    radio.setAutoAck(true);
    
    radio.openWritingPipe(clientAddress);  // –°–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
    radio.openReadingPipe(1, serverAddress);  // –°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç
    radio.startListening();

   
}

void loop() {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —á–∏—Å–ª–∞ –∫–ª–∏–µ–Ω—Ç—É
    radio.stopListening();
    radio.flush_tx();  // –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏

    if (radio.write(&number, sizeof(number))) {
        Serial.print("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É: ");
        Serial.println(number);
    } else {
        Serial.println("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏!");
    }

    radio.startListening();
    radio.flush_rx();  // –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –ø—Ä–∏—ë–º–∞

    unsigned long startTime = millis();
    while (!radio.available() && millis() - startTime < 200) {
        // –ñ–¥—ë–º –æ—Ç–≤–µ—Ç 200 –º—Å
    }

    if (radio.available()) {
        radio.read(&number, sizeof(number));
        Serial.print("üì© –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞: ");
        Serial.println(number);
    } else {
        Serial.println("‚ùå –û—Ç–≤–µ—Ç –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω!");
    }

    number++;  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —á–∏—Å–ª–æ
    if (number > 255) number = 0;

    delay(1000);  // –ü–∞—É–∑–∞ 1 —Å–µ–∫—É–Ω–¥–∞
}
